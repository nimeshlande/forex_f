{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NLANDE\\\\Desktop\\\\Forex_idigital\\\\frontend\\\\src\\\\components\\\\AddAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAccount = () => {\n  _s();\n  const [account, setAccount] = useState({\n    balance: 0,\n    customerID: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [msg, setMsg] = useState('');\n  const changeHandler = event => {\n    setAccount({\n      ...account,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleValidation = () => {\n    let tempErrors = {};\n    let formValid = true;\n    if (account.balance !== 0) {\n      formValid = false;\n      tempErrors['balance'] = 'Balance cannot be empty';\n    }\n    if (!account.customerID) {\n      formValid = false;\n      tempErrors['customerID'] = 'Customer ID cannot be empty';\n    }\n    setErrors(tempErrors);\n    return formValid;\n  };\n  const postAccount = async () => {\n    let newAccount = {\n      balance: account.balance\n    };\n    try {\n      const response = await axios.post(`http://localhost:2000/api/bank/account/add/${account.customerID}`, newAccount);\n      const data = response.data;\n      console.log('API success');\n      console.log(data);\n      if (data === 'Account already exists') {\n        setMsg('Already have an account');\n      } else {\n        setMsg('Account Created');\n      }\n      // Perform any necessary actions with the data\n    } catch (error) {\n      console.log('API error');\n      setMsg('Account already exists');\n    }\n  };\n  const onAdd = () => {\n    if (handleValidation()) {\n      console.log(account);\n      postAccount();\n    } else {\n      console.log('Validation not passed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-header\",\n        children: \"Add Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Enter Account Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert ${msg === 'Api error' ? 'alert-danger' : msg === 'Account Created' ? 'alert-success' : 'alert-danger'}`,\n          role: \"alert\",\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"side\",\n            children: \"Account Balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"balance\",\n            value: account.balance,\n            onChange: changeHandler,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors['balance']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"side\",\n            children: \"CustomerID: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"customerID\",\n            value: account.customerID,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors['customerID']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAdd,\n            className: \"btn\",\n            children: \"Add Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(AddAccount, \"0hTZI5d4+G5P8leZsnYyQ44vQDc=\");\n_c = AddAccount;\nexport default AddAccount;\nvar _c;\n$RefreshReg$(_c, \"AddAccount\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddAccount","_s","account","setAccount","balance","customerID","errors","setErrors","msg","setMsg","changeHandler","event","target","name","value","handleValidation","tempErrors","formValid","postAccount","newAccount","response","post","data","console","log","error","onAdd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","type","onChange","disabled","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NLANDE/Desktop/Forex_idigital/frontend/src/components/AddAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddAccount = () => {\r\n    const [account, setAccount] = useState({\r\n        balance: 0,\r\n        customerID: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const changeHandler = (event) => {\r\n        setAccount({\r\n            ...account,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleValidation = () => {\r\n        let tempErrors = {};\r\n        let formValid = true;\r\n\r\n        if (account.balance !== 0) {\r\n            formValid = false;\r\n            tempErrors['balance'] = 'Balance cannot be empty';\r\n        }\r\n        if (!account.customerID) {\r\n            formValid = false;\r\n            tempErrors['customerID'] = 'Customer ID cannot be empty';\r\n        }\r\n\r\n        setErrors(tempErrors);\r\n        return formValid;\r\n    };\r\n\r\n    const postAccount = async () => {\r\n        let newAccount = {\r\n            balance: account.balance\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:2000/api/bank/account/add/${account.customerID}`,\r\n                newAccount\r\n            );\r\n            const data = response.data;\r\n            console.log('API success');\r\n            console.log(data);\r\n            if (data === 'Account already exists') {\r\n                setMsg('Already have an account');\r\n            } else {\r\n                setMsg('Account Created');\r\n            }\r\n            // Perform any necessary actions with the data\r\n        } catch (error) {\r\n            console.log('API error');\r\n            setMsg('Account already exists');\r\n        }\r\n    };\r\n\r\n    const onAdd = () => {\r\n        if (handleValidation()) {\r\n            console.log(account);\r\n            postAccount();\r\n        } else {\r\n            console.log('Validation not passed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"card\">\r\n                <h5 className=\"card-header\">Add Account</h5>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Enter Account Info:</h5>\r\n                    {msg && (\r\n                        <div\r\n                            className={`alert ${msg === 'Api error' ? 'alert-danger' : msg === 'Account Created' ? 'alert-success' : 'alert-danger'}`}\r\n                            role=\"alert\"\r\n                        >\r\n                            {msg}\r\n                        </div>\r\n                    )}\r\n                    <p className=\"card-text\">\r\n                        <label className=\"side\">Account Balance: </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"balance\"\r\n                            value={account.balance}\r\n                            onChange={changeHandler}\r\n                            disabled\r\n                        />\r\n                        <span style={{ color: 'red' }}>{errors['balance']}</span>\r\n                        <br />\r\n                        <br />\r\n                        <label className=\"side\">CustomerID: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"customerID\"\r\n                            value={account.customerID}\r\n                            onChange={changeHandler}\r\n                        />\r\n                        <span style={{ color: 'red' }}>{errors['customerID']}</span>\r\n                        <br />\r\n                        <br />\r\n                        <button onClick={onAdd} className=\"btn\">\r\n                            Add Account\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default AddAccount;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}